@use 'sass:math';

// Convert
@function rem($px) {
	$result: math.div($px, 16) + rem;
	@return $result;
}
@function em($px) {
	$result: math.div($px, 16) + em;
	@return $result;
}

// Colors
$white: #ffffff;
// Primary
$primary-main: #1e41e3;
// Primary Shade
$primary-shade-100: #006cec;
$primary-shade-200: #005ece;
$primary-shade-300: #0051b1;
$primary-shade-400: #004393;
$primary-shade-500: #003676;
$primary-shade-600: #002858;
$primary-shade-700: #001b3b;
$primary-shade-800: #000d1d;
// Primary Tint
$primary-tint-100: #006cec;
$primary-tint-200: #0f7dff;
$primary-tint-300: #318fff;
$primary-tint-400: #54a2ff;
$primary-tint-500: #76b5ff;
$primary-tint-600: #98c7ff;
$primary-tint-700: #badaff;
$primary-tint-800: #ddecff;
$primary-tint-900: #edf5ff;
// Text
$text-black: #141414;
$text-light-black: #1e1e1e;
$text-dark: #3a3a3a;
// State
$state-info: #2f80ed;
$state-warning: #ebbc2e;
$state-error: #ed3a3a;
$state-success: #35b369;
// Gray
$gray-dark: #a7a7a7;
$gray-medium: #cfcfcf;
$gray-light: #e9e9e9;
$gray-extra-light: #f7f7f7;
// Gradients
// Primary
@property --gradient-primary-1 {
	syntax: '<color>';
	initial-value: $primary-shade-100;
	inherits: false;
}
@property --gradient-primary-2 {
	syntax: '<color>';
	initial-value: $primary-shade-300;
	inherits: false;
}
@property --gradient-primary-hover-1 {
	syntax: '<color>';
	initial-value: $primary-shade-200;
	inherits: false;
}
@property --gradient-primary-hover-2 {
	syntax: '<color>';
	initial-value: $primary-shade-400;
	inherits: false;
}
// Secondary
@property --gradient-secondary-1 {
	syntax: '<color>';
	initial-value: $white;
	inherits: false;
}
@property --gradient-secondary-2 {
	syntax: '<color>';
	initial-value: $primary-tint-800;
	inherits: false;
}
@property --gradient-secondary-hover-1 {
	syntax: '<color>';
	initial-value: $primary-tint-800;
	inherits: false;
}
@property --gradient-secondary-hover-2 {
	syntax: '<color>';
	initial-value: $primary-tint-700;
	inherits: false;
}

@mixin gradient-primary($duration: 0.1s, $isNeedHover: false) {
	transition:
		all $duration,
		--gradient-primary-1 $duration,
		--gradient-primary-2 $duration;

	background: linear-gradient(
		270deg,
		var(--gradient-primary-1) 25%,
		var(--gradient-primary-2) 100%
	);

	// Если ховер нужен
	@if $isNeedHover == true {
		&:hover {
			--gradient-primary-1: var(--gradient-primary-hover-1);
			--gradient-primary-2: var(--gradient-primary-hover-2);
		}
	}
}
@mixin gradient-secondary($duration: 0.1s, $isNeedHover: false) {
	transition:
		all $duration,
		--gradient-secondary-1 $duration,
		--gradient-secondary-2 $duration;

	background: linear-gradient(
		90deg,
		var(--gradient-secondary-1) 0%,
		var(--gradient-secondary-2) 100%
	);

	// Если ховер нужен
	@if $isNeedHover == true {
		&:hover {
			--gradient-secondary-1: var(--gradient-secondary-hover-1);
			--gradient-secondary-2: var(--gradient-secondary-hover-2);
		}
	}
}

// Containers
$containers-big: rem(1200);
$containers-medium: rem(1120);
$containers-small: rem(1080);
// Containers mixins
@mixin container-big($padding-inline: rem(20)) {
	max-width: $containers-big;
	padding: 0 $padding-inline;
	width: 100%;
	margin: 0 auto;
}
@mixin container-medium($padding-inline: rem(20)) {
	max-width: $containers-medium;
	padding: 0 $padding-inline;
	width: 100%;
	margin: 0 auto;
}
@mixin container-small($padding-inline: rem(20)) {
	max-width: $containers-small;
	padding: 0 $padding-inline;
	width: 100%;
	margin: 0 auto;
}

// Values
$corner-none: 0;
$corner-extra-small: rem(4);
$corner-small: rem(8);
$corner-medium: rem(12);
$corner-large: rem(16);
$corner-extra-large: rem(28);
$corner-full: rem(1000);
// Another values
$height-with-news: 50;

// Fonts
@mixin gilroy($weight: 400, $size: 16, $style: normal) {
	font-family: 'Gilroy', sans-serif;
	font-style: $style;
	font-size: rem($size);
	font-weight: $weight;
	line-height: 1;
	cursor: text;
}

@mixin strings($string-count) {
	overflow: hidden;
	text-overflow: ellipsis;
	display: -moz-box;
	display: -webkit-box;
	-webkit-line-clamp: $string-count;
	-webkit-box-orient: vertical;
	line-clamp: $string-count;
	box-orient: vertical;
}

@mixin position-center() {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

// Responsive

$max-1400: em(1400);
$max-1300: em(1300);
$max-1250: em(1250);
$max-1200: em(1200);
$max-1150: em(1150);
$max-1100: em(1100);
$max-1050: em(1050);
$max-1000: em(1000);
$max-950: em(950);
$max-900: em(900);
$max-850: em(850);
$max-800: em(800);
$max-768: em(768);
$max-700: em(700);
$max-650: em(650);
$max-600: em(600);
$max-550: em(550);
$max-500: em(500);
$max-450: em(450);
$max-400: em(400);
